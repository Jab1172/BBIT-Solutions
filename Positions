%%writefile ../implementations/positionSolution.py 
#Uncomment line above & run cell to save solution
#TODO Define class that implements positionInterface & allows for the management of a position

import os
import sys
module_path = os.path.abspath(os.path.join('..'))
if module_path not in sys.path:
    sys.path.append(module_path)

from interfaces.securityInterface import securityInterface
class positionInterface():
    def __init__(self, security, initialPosition: int) -> None:
        pass

    def getSecurity(self) -> securityInterface:
        pass

    def getPosition(self) -> int:
        pass
    
    def setPosition(self, inputValue: int) -> None:
        pass
    
    def addPosition(self, inputValue: int) -> None:
        pass
   
class position(positionInterface):
    
    ##create a new varibale 
    
    def __init__(self, newSecurity, initialPosition: int):
        print(newSecurity)
        self.security = newSecurity
        print('security', newSecurity)
        self.initialPosition = initialPosition
        print('initialPosition', initialPosition)

        if isinstance(newSecurity,str):   
            self.security = security(newsecurity)
            print('security', newSecurity)
        else:  
             self.securirty = newSecurity
       
    def getSecurity(self):
        return self.security

    def getPosition(self):
        return self.initialPosition
    
    def setPosition(self, inputValue: int):
        self.initialPosition = inputvalue
    
    def addPosition(self, inputValue: int):
        
        self.initialPosition += inputValue
        self.initialposition += inputValue

---------------------------------
